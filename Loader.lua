
if not _G.efield_loader then
    task.wait(5)
    game.Players.LocalPlayer:Kick("This is a fucking old script pls get new from Dev!!!!. End of storyü•∞üòò \n in 4sec game gonnabe shutdown!")
    wait(4)
    game:Shutdown()
    return
end

game:GetService("StarterGui"):SetCore("DevConsoleVisible", true)


-- Place Info
local placeId = game.PlaceId
local placeName = MarketplaceService:GetProductInfo(placeId).Name

print("üåç PlaceID : " .. placeId .. " | Map : " .. placeName)
--[[
	SCRIPT ENHANCEMENT: Fixed Issue - Prevents SUCCESS message from being replaced.
	Key change: Disconnect the RichText setting loop and ensure the correct TextLabel is referenced.
--]]

local Modules = {
    -- ‡∏™‡∏µ‡∏ó‡∏µ‡πà‡∏Ñ‡∏±‡∏î‡∏™‡∏£‡∏£‡∏°‡∏≤‡πÉ‡∏´‡∏°‡πà ‡πÄ‡∏ô‡πâ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û
    Colors =  {
        ["Success"]   = "46, 204, 113",   -- Emerald Green (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Success/Loaded)
        ["NEON_GREEN"]= "57, 255, 20",    -- NEON Green (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Final Success Message)
        ["Accent"]    = "52, 152, 219",   -- Bright Blue (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Loading Bar)
        ["Primary"]   = "236, 240, 241",  -- Light Gray (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô)
        ["Error"]     = "231, 76, 60",    -- Alizarin Red (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Failure)
    },
    Services = {
        RunService = game:GetService("RunService"),
        CoreGui = game:GetService("CoreGui")
    },
    
    -- ‡πÄ‡∏Å‡πá‡∏ö Reference ‡∏Ç‡∏≠‡∏á Connection ‡πÄ‡∏û‡∏∑‡πà‡∏≠ Disconnect ‡πÉ‡∏ô‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á
    HeartbeatConnection = nil 
}

-- ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î
local FILES_TO_LOAD = {
    {Name = "Blox Fruits", URL = "https://raw.githubusercontent.com/Efield44444235364/Ban/refs/heads/main/BF.lua"},
    {Name = "Optimization Engine", URL = "https://raw.githubusercontent.com/Efield44444235364/Ban/refs/heads/main/blox%20fruit%20Optimize.lua"},
    {Name = "Memory optimize", URL = "https://raw.githubusercontent.com/Efield44444235364/Ban/refs/heads/main/RamClear%20Auto.lua"},
    {Name = "Anti-Admin", URL = "https://raw.githubusercontent.com/Efield44444235364/Ban/refs/heads/main/Admins.lua"},
    {Name = "Auto Reconnect", URL = "https://raw.githubusercontent.com/Efield44444235364/Ban/refs/heads/main/Auto%20reconnect.lua"},
    {Name = "User Interface (UI)", URL = "https://raw.githubusercontent.com/Efield44444235364/Ban/refs/heads/main/Ui2.lua"},
}

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏´‡πâ DevConsole ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö RichText (‡∏õ‡∏£‡∏±‡∏ö‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡πá‡∏ö Connection)
Modules.ChangeColor = function() 
    -- ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Heartbeat ‡πÅ‡∏•‡∏∞‡πÄ‡∏Å‡πá‡∏ö Connection
    Modules.HeartbeatConnection = Modules.Services.RunService.Heartbeat:Connect(function()
        local success, err = pcall(function()
            local devConsole = Modules.Services.CoreGui:FindFirstChild("DevConsoleMaster")
            if devConsole then
                for _, label in pairs(devConsole:GetDescendants()) do 
                    if label:IsA("TextLabel") then 
                        label.RichText = true 
                    end 
                end 
            end
        end)

        if not success then 
            warn(`[Console Init] Error: {err}. Disconnecting RichText loop.`)
            if Modules.HeartbeatConnection then
                Modules.HeartbeatConnection:Disconnect()
                Modules.HeartbeatConnection = nil
            end
        end 
    end)
end


-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô LoadingBar ‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡πÇ‡∏´‡∏•‡∏î
Modules.LoadingBar = function(watermark, loadingSymbol)
    loadingSymbol = loadingSymbol or "‚ñà"
    
    local totalFiles = #FILES_TO_LOAD
    local filesLoaded = 0
    
    -- 1. ‡∏™‡∏£‡πâ‡∏≤‡∏á ID ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏•‡∏∞‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    local uniqueID = tostring(math.random(10, 999))
    local uniqueText = string.format("[%s] ID:%s | Preparing file system...", watermark, uniqueID)
    print(uniqueText) 

    local loadingLabel = nil
    
    -- 2. ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ TextLabel ‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå‡πÑ‡∏õ
    repeat task.wait()
        local devConsole = Modules.Services.CoreGui:FindFirstChild("DevConsoleMaster")
        if devConsole then
            -- ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ uniqueID ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥
            for _, label in pairs(devConsole:GetDescendants()) do 
                 if label:IsA("TextLabel") and string.find(label.Text, uniqueID) then 
                    loadingLabel = label 
                    break
                end 
            end 
        end
    until loadingLabel

    -- ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏û‡∏ö TextLabel ‡πÉ‡∏´‡πâ‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô (‡∏Å‡∏£‡∏ì‡∏µ Console ‡∏ñ‡∏π‡∏Å‡∏õ‡∏¥‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á)
    if not loadingLabel then 
        warn("Failed to find initial DevConsole TextLabel. Stopping loading bar.")
        return 
    end
    
    local accentColor = Modules.Colors["Accent"]
    local whiteColor = Modules.Colors["Primary"]
    local errorColor = Modules.Colors["Error"]

    local startTime = os.time()
    
    -- 3. ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡∏•‡∏∞‡∏ï‡∏±‡∏ß
    for i, fileData in ipairs(FILES_TO_LOAD) do
        local currentFileName = fileData.Name
        
        -- Animation ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå (Pre-Load)
        for j = 1, 5 do
            local currentProgress = (i - 1) / totalFiles + (j / 5) * (1 / totalFiles)
            local percent = math.floor(currentProgress * 100)
            local barLength = math.floor(currentProgress * 30)
            
            local bar = string.rep(loadingSymbol, barLength)
            local empty = string.rep(" ", 30 - barLength)

            local textTemplate = [[<font color='rgb(%s)' size='15'>[%s] <font color='rgb(%s)'>[</font>%s<font color='rgb(%s)'>%s</font><font color='rgb(%s)'>]</font> %d%% | Loading: %s</font>]]
            
            loadingLabel.Text = string.format(
                textTemplate, 
                whiteColor, 
                watermark,
                accentColor, 
                bar, 
                whiteColor, 
                empty,
                accentColor, 
                percent,
                currentFileName
            )
            task.wait(0.05)
        end
        
        -- ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏à‡∏£‡∏¥‡∏á (Blocking Call)
        local success, result = pcall(function()
            task.wait(0.1) -- ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î
            return loadstring(game:HttpGet(fileData.URL))()
        end)
        
        if success then
            filesLoaded = filesLoaded + 1
        end
        
        -- ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó Loading Bar ‡πÉ‡∏´‡πâ‡πÄ‡∏ï‡πá‡∏° Step ‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ (Complete/Failed)
        local statusText = success and "<font color='rgb("..Modules.Colors["Success"]..")'>Complete</font>" or "<font color='rgb("..errorColor..")'>Failed</font>"
        
        local percent = math.floor((i / totalFiles) * 100)
        local barLength = math.floor((i / totalFiles) * 30)
        
        local bar = string.rep(loadingSymbol, barLength)
        local empty = string.rep(" ", 30 - barLength)

        local textTemplateFinal = [[<font color='rgb(%s)' size='15'>[%s] <font color='rgb(%s)'>[</font>%s<font color='rgb(%s)'>%s</font><font color='rgb(%s)'>]</font> %d%% | Status: %s</font>]]
        
        loadingLabel.Text = string.format(
            textTemplateFinal, 
            whiteColor, 
            watermark,
            accentColor, 
            bar, 
            whiteColor, 
            empty,
            accentColor, 
            percent,
            statusText
        )
        task.wait(0.1)
    end

    -- 4. ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏ö‡∏ö NEON GREEN ‡∏™‡∏∏‡∏î‡∏õ‡∏±‡∏á
    local finalID = tostring(math.random(10, 999)) 
    
    -- ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï TextLabel ‡∏ï‡∏±‡∏ß‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢
    loadingLabel.Text = string.format(
        "<font color='rgb(%s)' size='18'>[%s] ID:%s | [SUCCESS]</font>", 
        Modules.Colors["NEON_GREEN"], 
        watermark, 
        finalID
    )

    -- **‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç:** ‡∏ï‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Heartbeat Loop ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
    if Modules.HeartbeatConnection then
        Modules.HeartbeatConnection:Disconnect()
        Modules.HeartbeatConnection = nil
    end
    -- (‡∏ó‡∏≤‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô Console History)


-- === ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ===

Modules.ChangeColor()

-- ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Loading Bar
Modules.LoadingBar("Kawnew_LOAD", "‚ñà")




